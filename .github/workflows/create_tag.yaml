name: Create Tag

on:
  pull_request:
    types:
      - closed

jobs:

  create-tag:
    name: Create tag
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Verify branch name
        id: verify_branch
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          branch_name=$HEAD_REF

          # Ensure branch_name is not empty
          if [ -z "$branch_name" ]; then
            echo "branch_name is not set. Exiting."
            exit 1
          fi

          # Verify if branch_name matches the expected pattern
          branch_name=$(echo "$branch_name" | grep -E '^workflow/bump-version-from-[0-9]+\.[0-9]+\.[0-9]+-to-[0-9]+\.[0-9]+\.[0-9]+$' || echo "nomatch")
          if [ "$branch_name" == "nomatch" ]; then
            echo "This branch does not match the expected pattern. Skipping."
            exit 0
          fi

          echo "branch_name=${branch_name}" >> "$GITHUB_OUTPUT"

      - name: Extract version from branch name
        id: extract_version
        if: steps.verify_branch.outputs.branch_name
        run: |
          # Extract the version from the branch name
          current_version=$(echo "${{ steps.verify_branch.outputs.branch_name }}" | sed -E 's/^workflow\/bump-version-from-[0-9]+\.[0-9]+\.[0-9]+-to-([0-9]+\.[0-9]+\.[0-9]+)$/\1/')
          echo "current_version=${current_version}" >> "$GITHUB_OUTPUT"

      - name: Configure Git
        if: steps.verify_branch.outputs.branch_name
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push Git tag
        if: steps.verify_branch.outputs.branch_name
        run: |
          git tag "v${{ steps.extract_version.outputs.current_version }}" "${{ github.event.pull_request.merge_commit_sha }}"
          git push origin "v${{ steps.extract_version.outputs.current_version }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
